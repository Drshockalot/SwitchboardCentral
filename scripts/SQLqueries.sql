/*Query 1*/

SELECT STAFF.NAME AS STAFF_NAME, STAFF.WORKPHONENO AS WORK_PHONE, STAFF.HOMEPHONENO AS HOME_PHONE
FROM STAFF
INNER JOIN LOCATION
ON STAFF.LOCATIONID = LOCATION.LOCATIONID
INNER JOIN BUILDING
ON LOCATION.BUILDINGID = BUILDING.BUILDINGID
WHERE BUILDING.BUILDINGNAME = :User_Input_BuildingName;

select sys_context('userenv','db_name') from dual;
select ora_database_name from dual;
select * from global_name;
/*Query 2*/

SELECT EQUIPMENT.NAME AS EQUIPMENT_NAME, EQUIPMENTALLOCATION.QUANTITY, LOCATION.ROOMNO AS ROOM_NUMBER, LOCATION.FLOOR, LOCATION.TYPE AS ROOM_TYPE
FROM EQUIPMENTALLOCATION
INNER JOIN EQUIPMENT
ON EQUIPMENTALLOCATION.EQUIPMENTID = EQUIPMENT.EQUIPMENTID
INNER JOIN LOCATION 
ON EQUIPMENTALLOCATION.LOCATIONID = LOCATION.LOCATIONID
INNER JOIN BUILDING
ON LOCATION.BUILDINGID = BUILDING.BUILDINGID
WHERE BUILDING.BUILDINGNAME = :User_Input_BuildingName
        AND
      LOCATION.ROOMNO IS NOT NULL
        AND
      LOCATION.CURRENTCONFIG IS NOT NULL
        AND
      EQUIPMENTALLOCATION.LOCATIONID IS NOT NULL;
      
/*Query 3*/

SELECT LOCATION.LOCATIONID, LOCATION.ROOMNO, LOCATION.TYPE, LOCATION.FLOOR, BUILDING.BUILDINGNAME, CONFIGURATION.CURRENTCONFIG, 
       CONFIGURATION.ISLANDCAPACITY, CONFIGURATION.HORSESHOECAPACITY, CONFIGURATION.ROWCAPACITY
FROM LOCATION
INNER JOIN CONFIGURATION
ON LOCATION.LOCATIONID = CONFIGURATION.LOCATIONID
INNER JOIN BUILDING
ON LOCATION.BUILDINGID = BUILDING.BUILDINGID
WHERE LOCATION.LOCATIONID NOT IN 
( 
  SELECT DISTINCT LOCATIONID 
  FROM BOOKING 
  WHERE 
  (
    (TO_DATE(:User_Input_Event_Start, 'dd-mm-rrrr hh24:mi') BETWEEN EVENTSTART AND EVENTEND) 
      OR 
    (TO_DATE(:User_Input_Event_End, 'dd-mm-rrrr hh24:mi') BETWEEN EVENTSTART AND EVENTEND) 
      OR 
    (TO_DATE(:User_Input_Event_Start, 'dd-mm-rrrr hh24:mi') <= EVENTSTART AND TO_DATE(:User_Input_Event_End, 'dd-mm-rrrr hh24:mi') >= EVENTEND)
  )
)
  AND
BUILDING.BUILDINGNAME = :User_Input_BuildingName
  AND
(
  CONFIGURATION.ROWCAPACITY >= :User_Input_Room_Capacity
    OR
  CONFIGURATION.ISLANDCAPACITY >= :User_Input_Room_Capacity
    OR
  CONFIGURATION.HORSESHOECAPACITY >= :User_Input_Room_Capacity
)
  AND
LOCATION.ROOMNO IS NOT NULL
ORDER BY LOCATION.LOCATIONID;

/*Query 4*/

INSERT INTO EVENT (EVENTNAME, EVENTPURPOSE, STAFFID)
VALUES (:User_Input_EventName, :User_Input_EventPurpose, (SELECT STAFFID 
                                          FROM STAFF 
                                          WHERE STAFF.NAME = :User_Input_Organiser));

/*Query 5*/
INSERT INTO BOOKING (LOCATIONID, EVENTID, EVENTSTART, EVENTEND)
VALUES ((SELECT LOCATIONID
         FROM LOCATION
         WHERE ROOMNO = :User_Input_RoomNo), (SELECT EVENTID
                                              FROM EVENT
                                              WHERE EVENTNAME = :User_Input_EventName), :User_Input_EventStart, :User_Input_EventEnd);

